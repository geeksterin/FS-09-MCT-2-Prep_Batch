sliding window 5------------------------------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
       Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i=0; i<n; i++){
            arr[i]= sc.nextInt();
        }
        int k=sc.nextInt();
        int max;
        int[] ans= new int[n-k+1];
        //1 2 3 1 4 5 2 3 6
        //3
        for(int i=0; i<=n-k ; i++){//i=1
            max=Integer.MIN_VALUE;
            for(int j=i; j<i+k; j++){// 1,2,3
                if(max<arr[j]){
                    max=arr[j];//3
                }
            }
            ans[i]=max;// 3
        }
        
        for(int ele:ans){
            System.out.print(ele+" ");
        }
    }
}




Mirror Image 4---------------------------------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i=0; i<n; i++){
            arr[i]= sc.nextInt();
        }
        int m = sc.nextInt();
        int[] brr = new int[m];
        for(int i=0; i<m; i++){
            brr[i]= sc.nextInt();
        }
        
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(arr[i]+brr[j]==0){
                    System.out.print(arr[i]+ " ");
                    break;
                }
            }
        }
    }
}



Bubble Sort-------------------------------------------------------
import java.io.*;
import java.util.*;

public class Solution {
    
    public static int[] bubbleSort(int arr[], int n){
        //  9 4 3 8 7
        for(int i=0; i<n-1; i++){//i=1
            for(int j=0; j<n-1; j++){
                if(arr[j]>arr[j+1]){//3 4 7 8 9
                    //swap
                    int temp = arr[j];
                    arr[j]=arr[j+1];
                    arr[j+1]=temp;
                }
            }
        }
        return arr;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i=0; i<n; i++){
            arr[i]= sc.nextInt();
        }
        int[] ans=bubbleSort(arr, n);
        for(int val:ans){
            System.out.print(val+" ");
        }
    }
}



Selection sort------------------------------------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i=0; i<n; i++){
            arr[i]= sc.nextInt();
        }
        
        //selection sorting algo
        // 9 4 3 8 7
        for(int i=0; i<n-1; i++){//i=0
            for(int j=i+1; j<n; j++){//j=1
                if(arr[i]>arr[j]){//we are compring adjacent elements
                    //swap
                    int temp = arr[i];//3 9 4 8 7 -> 3 4 ...
                    arr[i]=arr[j];
                    arr[j]=temp;
                }
            }
        }
        
        for(int ele:arr){
            System.out.print(ele+ " ");
        }
    }
}



Form the largest number----------------------------------------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
       Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i=0; i<n; i++){
            arr[i]= sc.nextInt();
        }
        //converting array into string array
        String[] s= new String[n];
        for(int i=0; i<n; i++){
            s[i]=String.valueOf(arr[i]);
        }
        
        //sorting my string ki array according to the question   , 4 46 8 9 -> 9 8 46 4
        Arrays.sort(s, (a,b)-> (b+a).compareTo(a+b));//(34, 8)-> 348, 834
        
        StringBuilder sb = new StringBuilder();
        for(String str: s){
            sb.append(str);//98464
        }
        String result = sb.toString();
        System.out.print(result);//98464
    }
}




Store the maximum--------------------------------------------------
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
       Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i=0; i<n; i++){
            arr[i]= sc.nextInt();
        }
        
        int left =0;// 2
        int right =n-1;// 11
        int leftMax=0;
        int rightMax=0;
        int water=0;//1
        //0 1 0 2 1 0 1 3 2 1 2 1
        while(left<=right){
            leftMax= Math.max(leftMax, arr[left]);//1
            rightMax= Math.max(rightMax, arr[right]);//1
            
            if(leftMax<=rightMax){
                water = water+leftMax-arr[left];
                left++;
            }else{
                water = water+rightMax-arr[right];
                right--;
            }
            
        }
        System.out.print(water);
            
    }
}
